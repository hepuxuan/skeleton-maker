{"version":3,"sources":["../node_modules/draw-page-structure/evalDOM.js","index.js"],"names":["copyToClipboard","str","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","animation","then","skeletonHTML","console","log","alert","catch","e","error"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["module.exports = function evalDOM() {\r\n  const ELEMENTS = ['audio', 'button', 'canvas', 'code', 'img', 'input', 'pre', 'svg', 'textarea', 'video', 'xmp'];\r\n  const blocks = [];\r\n  const win_w = window.innerWidth;\r\n  const win_h = window.innerHeight;\r\n\r\n  let agrs = arguments;\r\n  if(!agrs.length) agrs = {length: 1, 0: {}};\r\n  let agrs0 = agrs[0];\r\n  \r\n  if(agrs.length !== 1 || getArgtype(agrs0) !== 'object') {\r\n    agrs = parseAgrs([...agrs]);\r\n  }\r\n\r\n  const classProps = {\r\n    position: 'fixed',\r\n    zIndex: 999,\r\n    background: agrs.background\r\n  }\r\n  if(agrs.animation) {\r\n    classProps.animation = agrs.animation;\r\n  }\r\n\r\n  createCommonClass(classProps);\r\n\r\n  function drawBlock({width, height, top, left, zIndex = 999, background = agrs.background, radius, subClas} = {}) {\r\n    const styles = ['height:'+height+'%'];\r\n\r\n    if(!subClas) {\r\n      styles.push('top:'+top+'%', 'left:'+left+'%', 'width:'+width+'%');\r\n    }\r\n\r\n    if(classProps.zIndex !== zIndex) {\r\n      styles.push('z-index:'+zIndex);\r\n    }\r\n\r\n    if(classProps.background !== background) {\r\n      styles.push('background:'+background);\r\n    }\r\n\r\n    radius && radius != '0px' && styles.push('border-radius:'+ radius);\r\n    blocks.push(`<div class=\"_${subClas? ' __': ''}\" style=\"${styles.join(';')}\"></div>`);\r\n  }\r\n\r\n  function wPercent(x) {\r\n    return parseFloat(x/win_w*100).toFixed(3);\r\n  }\r\n  \r\n  function hPercent(x) {\r\n    return parseFloat(x/win_h*100).toFixed(3);\r\n  }\r\n\r\n  function noop() {}\r\n\r\n  function getArgtype(arg){\r\n    return Object.prototype.toString.call(arg).toLowerCase().match(/\\s(\\w+)/)[1];\r\n  }\r\n\r\n  function getStyle(node, attr) {\r\n    return (node.nodeType === 1? getComputedStyle(node)[attr]: '') || '';\r\n  }\r\n\r\n  function getRootNode(el) {\r\n    if(!el) return el;\r\n    return typeof el === 'object' ?\r\n            el:\r\n            (getArgtype(el) === 'string' ?\r\n            document.querySelector(el):\r\n            null);\r\n  }\r\n\r\n  function includeElement(elements, node) {\r\n    return ~elements.indexOf((node.tagName || '').toLowerCase());\r\n  }\r\n\r\n  function isHideStyle(node) {\r\n    return getStyle(node, 'display') === 'none' || \r\n        getStyle(node, 'visibility') === 'hidden' || \r\n        getStyle(node, 'opacity') == 0 ||\r\n        node.hidden;\r\n  }\r\n\r\n  function isCustomCardBlock(node) {\r\n    const bgStyle = getStyle(node, 'background');\r\n    const bgColorReg = /rgba\\([\\s\\S]+?0\\)/ig;\r\n    const bdReg = /(0px)|(none)/;\r\n    const hasBgColor = !bgColorReg.test(bgStyle) || ~bgStyle.indexOf('gradient');\r\n    const hasNoBorder = ['top', 'left', 'right', 'bottom'].some(item => {\r\n      return bdReg.test(getStyle(node, 'border-'+item));\r\n    });\r\n    const {w, h} = getRect(node);\r\n    const customCardBlock = !!(hasBgColor && (!hasNoBorder || getStyle(node, 'box-shadow') != 'none') && w > 0 && h > 0 && w < 0.95*win_w && h < 0.3*win_h);\r\n    return customCardBlock;\r\n  }\r\n\r\n  function calcTextWidth(text, {fontSize, fontWeight} = {}) {\r\n    if(!text) return 0;\r\n\r\n    const div = document.createElement('div');\r\n    div.innerHTML = text;\r\n    div.style.cssText = [\r\n      'position:absolute',\r\n      'left:-99999px',\r\n\t    `height:${fontSize}`,\r\n      `font-size:${fontSize}`,\r\n      `font-weight:${fontWeight}`,\r\n      'opacity:0'\r\n    ].join(';');\r\n    document.body.appendChild(div);\r\n    const w = getStyle(div, 'width');\r\n    const h = getStyle(div, 'height');\r\n    document.body.removeChild(div);\r\n    return {\r\n      w: parseInt(w),\r\n      h: parseInt(h)\r\n    };\r\n  }\r\n\r\n  function getRect(node) {\r\n    if(!node) return {};\r\n    const { top: t, left: l, width: w, height: h } = node.getBoundingClientRect();\r\n    return {t, l, w, h};\r\n  }\r\n\r\n  function getPadding(node) {\r\n    return {\r\n      paddingTop: parseInt(getStyle(node, 'paddingTop')),\r\n      paddingLeft: parseInt(getStyle(node, 'paddingLeft')),\r\n      paddingBottom: parseInt(getStyle(node, 'paddingBottom')),\r\n      paddingRight: parseInt(getStyle(node, 'paddingRight'))\r\n    }\r\n  }\r\n\r\n  function createCommonClass(props) {\r\n    const inlineStyle = ['<style>._{'];\r\n    for(let prop in props) {\r\n      inlineStyle.push(`${prop === 'zIndex'? 'z-index': prop}:${props[prop]};`);\r\n    }\r\n    inlineStyle.push('}.__{top:0%;left:0%;width:100%;}</style>');\r\n    blocks.push(inlineStyle.join(''));\r\n  }\r\n\r\n  function parseAgrs(agrs = []) {\r\n    let params = {};\r\n    agrs.forEach(agr => {\r\n      const sep = agr.indexOf(':');\r\n      const [appName, name, type] = agr.slice(0, sep).split('-');\r\n      const val = agr.slice(sep + 1);\r\n      params[name] = type === 'function'? eval('(' + val + ')'): \r\n                      type === 'object'? JSON.parse(val):\r\n                      val;\r\n    });\r\n    return params;\r\n  }\r\n\r\n  function DrawPageframe(opts) {\r\n    this.rootNode = getRootNode(opts.rootNode) || document.body;\r\n    this.offsetTop = opts.offsetTop || 0;\r\n    this.includeElement = opts.includeElement;\r\n    this.init = opts.init;\r\n    this.originStyle = {};\r\n\r\n    return this instanceof DrawPageframe? this: new DrawPageframe(opts); \r\n  }\r\n\r\n  DrawPageframe.prototype = {\r\n    resetDOM: function() {\r\n      this.init && this.init();\r\n      this.originStyle = {\r\n        scrollTop: window.scrollY,\r\n        bodyOverflow: getStyle(document.body, 'overflow')\r\n      };\r\n      window.scrollTo(0, this.offsetTop);\r\n      document.body.style.cssText += 'overflow:hidden!important;';\r\n      drawBlock({\r\n        height: 100, \r\n        zIndex: 990,\r\n        background: '#fff',\r\n        subClas: true\r\n      });\r\n      this.withHeader();\r\n    },\r\n    inHeader: function(node) {\r\n      if(agrs.header) {\r\n        const height = parseInt(agrs.header.height);\r\n        if(height) {\r\n          const {t, l, w, h} = getRect(node);\r\n          return t <= height;\r\n        }\r\n      }\r\n    },\r\n    withHeader: function() {\r\n      if(agrs.header) {\r\n        const {height, background} = agrs.header;\r\n        const hHeight = parseInt(height);\r\n        const hBackground = background || agrs.background;\r\n        if(hHeight) {\r\n          drawBlock({\r\n            height: hPercent(hHeight), \r\n            zIndex: 999,\r\n            background: hBackground,\r\n            subClas: true\r\n          });\r\n        }\r\n      }\r\n    },\r\n    showBlocks: function() {\r\n      if(blocks.length) {\r\n        const { body } = document;\r\n        const blocksHTML = blocks.join('');\r\n        const div = document.createElement('div');\r\n        div.innerHTML = blocksHTML;\r\n        body.appendChild(div);\r\n\r\n        window.scrollTo(0, this.originStyle.scrollTop);\r\n        document.body.style.overflow = this.originStyle.bodyOverflow;\r\n\r\n        return blocksHTML;\r\n      }\r\n    },\r\n\r\n    startDraw: function() {\r\n      const $this = this;\r\n      this.resetDOM();\r\n      const nodes = this.rootNode.childNodes;\r\n      \r\n      function deepFindNode(nodes) {\r\n        if(nodes.length) {\r\n          for(let i = 0; i < nodes.length; i++) {\r\n            \r\n            let node = nodes[i];\r\n            if(isHideStyle(node) || (getArgtype($this.includeElement) === 'function' && $this.includeElement(node, drawBlock) == false)) continue;\r\n            let childNodes = node.childNodes;\r\n            let hasChildText = false;\r\n            let background = getStyle(node, 'backgroundImage');\r\n            let backgroundHasurl = background.match(/url\\(.+?\\)/);\r\n            \r\n            backgroundHasurl = backgroundHasurl && backgroundHasurl.length;\r\n\r\n            for(let j = 0; j < childNodes.length; j++) {\r\n              if(childNodes[j].nodeType === 3 && childNodes[j].textContent.trim().length) {\r\n                hasChildText = true;\r\n                break;\r\n              }\r\n            }\r\n\r\n            if((includeElement(ELEMENTS, node) || \r\n              backgroundHasurl ||\r\n              (node.nodeType === 3 && node.textContent.trim().length) || hasChildText ||\r\n              isCustomCardBlock(node)) && !$this.inHeader(node)) {\r\n                const {t, l, w, h} = getRect(node);\r\n                \r\n                if(w > 0 && h > 0 && l >= 0 && l < win_w && t < win_h - 100 && t >= 0) {\r\n                  const {\r\n                    paddingTop,\r\n                    paddingLeft,\r\n                    paddingBottom,\r\n                    paddingRight\r\n                  } = getPadding(node);\r\n                  drawBlock({\r\n                    width: wPercent(w - paddingLeft - paddingRight), \r\n                    height: hPercent(h - paddingTop - paddingBottom), \r\n                    top: hPercent(t + paddingTop), \r\n                    left: wPercent(l + paddingLeft),\r\n                    radius: getStyle(node, 'border-radius')\r\n                  });\r\n                }\r\n            } else if(childNodes && childNodes.length) {\r\n              if(!hasChildText) {\r\n                deepFindNode(childNodes);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      deepFindNode(nodes);\r\n      return this.showBlocks();\r\n    }\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {   \r\n    setTimeout(() => {\r\n      try{\r\n        const html = new DrawPageframe({\r\n          init: agrs.init,\r\n          rootNode: agrs.rootNode,\r\n          includeElement: agrs.includeElement\r\n        }).startDraw();\r\n        resolve(html);\r\n      }catch(e) {\r\n        reject(e);\r\n      }\r\n    }, 1000);\r\n  }); \r\n\r\n}\r\n\r\n// 待优化：\r\n// 1. table\r\n// 2. 文字\r\n","import createSkeletonHTML from \"draw-page-structure/evalDOM\";\n\nconst copyToClipboard = str => {\n  const el = document.createElement(\"textarea\");\n  el.value = str;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n};\n\ncreateSkeletonHTML({\n  // background: \"red\",\n  animation: \"opacity 1s linear infinite;\"\n})\n  .then(skeletonHTML => {\n    console.log(skeletonHTML);\n    copyToClipboard(skeletonHTML);\n    alert(\"copied to clipboard\");\n  })\n  .catch(e => {\n    console.error(e);\n  });\n"]}